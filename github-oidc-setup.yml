AWSTemplateFormatVersion: '2010-09-09'
Description: 'OIDC Identity Provider and IAM Role for GitHub Actions to deploy Terraform'

Parameters:
  GitHubRepository:
    Type: String
    Description: 'GitHub repository in format owner/repo-name'
    Default: 'your-username/terraform-testing'
  
  GitHubBranch:
    Type: String
    Description: 'GitHub branch allowed to assume the role'
    Default: 'main'

Resources:
  GitHubOIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
        - 1c58a3a8518e8759bf075b76b750d4f2df264fcd
      Tags:
        - Key: Name
          Value: GitHubActionsOIDCProvider
        - Key: Purpose
          Value: TerraformDeployment

  TerraformStateS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-terraform-state-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: TerraformStateBackend
        - Key: Purpose
          Value: TerraformStateStorage

  GitHubActionsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-GitHubActionsRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProvider
            Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                'token.actions.githubusercontent.com:aud': sts.amazonaws.com
              StringLike:
                'token.actions.githubusercontent.com:sub': !Sub 'repo:${GitHubRepository}:*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
      Policies:
        - PolicyName: TerraformStateAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt TerraformStateS3Bucket.Arn
                  - !Sub '${TerraformStateS3Bucket.Arn}/*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-*'
      Tags:
        - Key: Name
          Value: GitHubActionsTerraformRole
        - Key: Purpose
          Value: TerraformDeployment

Outputs:
  RoleArn:
    Description: 'ARN of the IAM Role for GitHub Actions'
    Value: !GetAtt GitHubActionsRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-GitHubActionsRoleArn'

  S3BucketName:
    Description: 'Name of the S3 bucket for Terraform state'
    Value: !Ref TerraformStateS3Bucket
    Export:
      Name: !Sub '${AWS::StackName}-TerraformStateBucket'

  OIDCProviderArn:
    Description: 'ARN of the OIDC Identity Provider'
    Value: !Ref GitHubOIDCProvider
    Export:
      Name: !Sub '${AWS::StackName}-GitHubOIDCProvider'